name: Build and Release

on:
  workflow_dispatch:  # Allows manual trigger
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - { os: linux, arch: amd64 }
          - { os: linux, arch: arm64 }
          - { os: darwin, arch: amd64 }
          - { os: darwin, arch: arm64 }

    steps:
      - name: Checkout public repo
        uses: actions/checkout@v4

      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          repository: bennydreamtech23/precheck-developer
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}
          path: private-repo

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Create build directory
        run: mkdir -p build

      - name: Combine scripts
        run: |
          cat > build/precheck << 'SCRIPT'
          #!/bin/bash
          # Precheck Combined Binary
          SCRIPT
          
          cat private-repo/universal-precheck.sh >> build/precheck
          echo "" >> build/precheck
          cat private-repo/elixir-precheck.sh >> build/precheck
          echo "" >> build/precheck
          cat private-repo/nodejs-precheck.sh >> build/precheck
          
          chmod +x build/precheck

      - name: Test binary
        run: |
          ./build/precheck --version

      - name: Package binary
        run: |
          cd build
          tar -czf precheck_v${{ steps.version.outputs.VERSION }}_${{ matrix.os }}_${{ matrix.arch }}.tar.gz precheck
          ls -lh precheck_*.tar.gz

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}-${{ matrix.arch }}
          path: build/precheck_*.tar.gz
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Flatten artifacts
        run: |
          mkdir -p dist
          find artifacts -name "*.tar.gz" -exec cp {} dist/ \;
          ls -lh dist/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/precheck_*.tar.gz
          draft: false
          prerelease: false
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release Summary
        run: |
          echo "âœ… Release created successfully!"
          echo "ðŸ“¦ Download: https://github.com/bennydreamtech23/precheck/releases/tag/${{ github.ref_name }}"